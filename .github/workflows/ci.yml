name: CI

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  mix_test:
    name: mix test (Elixir ${{matrix.elixir}} | Erlang/OTP ${{matrix.otp}})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - elixir: '1.13.4'
            otp: '24.0'
            blend: lowest
          - elixir: '1.13.4'
            otp: '25.0'
          - elixir: '1.14.0'
            otp: '25.0'
          - elixir: '1.15.2'
            otp: '26.0'
          - elixir: '1.16.0'
            otp: '26.0'
            check_formatted: true
            warnings_as_errors: true
    env:
      MIX_ENV: test
      BLEND: matrix.blend
    steps:
      - uses: actions/checkout@v4
      - uses: erlef/setup-beam@v1
        with:
          otp-version: ${{matrix.otp}}
          elixir-version: ${{matrix.elixir}}
      - name: Deps and _build cache
        if: !matrix.blend
        uses: actions/cache@v4
        id: deps-cache
        with:
          path: |
              deps
              _build
          key: ${{ runner.os }}-${{ runner.arch }}-${{ matrix.otp }}-${{ matrix.elixir }}-${{ hashFiles('mix.lock') }}
      - name: Blend deps and _build cache
        if: matrix.blend
        uses: actions/cache@v4
        id: blend-deps-cache
        with:
          path: |
              /blend/_build/${{matrix.blend}}
              /blend/deps/${{matrix.blend}}
          key: ${{ runner.os }}-${{ runner.arch }}-${{ matrix.otp }}-${{ matrix.elixir }}-${{ hashFiles('blend/lowest.mix.lock') }}
      - name: Install Dependencies
        if: steps.deps-cache.outputs.cache-hit != 'true' || steps.blend-deps-cache.outputs.cache-hit != 'true'
        run: |
          mix local.hex --force
          mix local.rebar --force
          mix deps.get --only test
      - run: mix deps.compile
        if: steps.deps-cache.outputs.cache-hit != 'true' || steps.blend-deps-cache.outputs.cache-hit != 'true'
      - run: mix format --check-formatted
        if: matrix.check_formatted
      - run: mix compile
        if: ${{ !matrix.warnings_as_errors }}
      - run: mix compile --warnings-as-errors
        if: matrix.warnings_as_errors
      - run: mix test
        if: ${{ !matrix.warnings_as_errors }}
      - run: mix test --warnings-as-errors
        if: matrix.warnings_as_errors
